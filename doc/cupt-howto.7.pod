=pod

=head1 NAME

how to use L<cupt(1)>

=head1 PREFACE

When using commands that modify a system, you have to either execute cupt with
root priviledes or supply '--simulate' (or '-s') option.

=head1 BASIC USAGE

How do I:

=head2 upgrade the whole system?

cupt full-upgrade

=head2 upgrade the system without removing packages?

cupt safe-upgrade

=head2 install a package?

cupt install <package name>

=head2 install several packages at once?

cupt install <package name 1> <package name 2> .. <package name N>

=head2 remove a package?

cupt remove <package name>

=head2 remove several packages at once?

cupt remove <package name 1> <package name 2> .. <package name N>

=head2 remove a package along with its configuration files?

cupt purge <package name>

=head2 update repository metadata?

cupt update

=head2 print info about package?

cupt show <package name>

=head2 print only dependencies for a package?

cupt depends <package name>

=head2 print reverse dependencies for a package?

cupt rdepends <package name>

=head2 search for a package?

cupt search <keyword 1> <keyword2> .. <keyword N>

=head1 ADVANCED USAGE

How do I:

=head2 print info about available releases?

cupt policy

=head2 print info about pins and available version for a package?

cupt policy <package name>

=head2 print info about many packages?

cupt show <package name 1> <package name 2> .. <package name N>

=head2 print all configuration variables?

cupt config-dump

=head2 print a particular configuration variable?

cupt config-dump <variable>

=head2 see Debian changelog for a package?

cupt changelog <package name>

=head2 see copyright info for a package?

cupt copyright <package name>

=head2 specify a particular version for a package?

<package name>=<version string> (example: cupt install proxychains=3.1-2)

=head2 specify a particular acrhive/codename for a package?

<package name>/<archive> (example: cupt install libc6/experimental)

<package name>/<codename> (example: cupt install proxychains/lenny)

=head2 see versions of packages for install/remove/upgrade/etc. ?

use '--show-versions' option

=head2 see why cupt decided to do that particular action?

use '--show-reasons' option

=head2 install and remove packages simultaneously?

Examples:

cupt install <package name to install> <package name to remove>-

cupt remove <package name to remove> <package name to install>+

=head2 satisfy particular dependency relation expressions?

cupt satisfy 

=head2 mark the package as automatically installed?

cupt markauto <package name>

=head2 mark the package as manually installed?

cupt unmarkauto <package name>
